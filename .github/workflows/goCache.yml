name: chache build
env:
  CWA_GITHUB_REPO_NAME: "aws/amazon-cloudwatch-agent"
  S3_INTEGRATION_BUCKET: "terraform-integration-test"
#  CACHE_DIR: "uniform-build-env-test/cache_build_env"
  CACHE_DIR: "https://uniform-build-env-test.s3.us-west-2.amazonaws.com/cache_build_env/"

on:
  push:
    branches:
      - CWQS-739
  workflow_dispatch:
jobs:
  cache:
    name: build cache
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.TERRAFORM_AWS_ASSUME_ROLE }}
          aws-region: us-west-2
      - uses: actions/checkout@v3
        with:
          repository: ${{env.CWA_GITHUB_REPO_NAME}}
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ~1.19.2
      - name: Cache binaries
        id: cached_binaries
        uses: actions/cache@v3
        with:
          key: "cached_binaries_${{ github.sha }}"
          path: go.mod

      - name: Check if directory is empty
        id: check_empty_directory
        run: |
            if [ -z "$(ls -A ${CACHE_DIR})" ]; then
              echo "Directory is empty"
              echo "::set-output name=is_empty::true"
            else
              echo "::set-output name=is_empty::false"
            fi
#      - name: Build Uniform Build Env
#        if: contains(inputs.BucketKey, 'test') == false || steps.cached_binaries.outputs.cache-hit == false
#        run: |
#          cd packaging/uniformBuild
#          go build .
#      - name: Download RPM
#        run: |
#          aws s3 cp s3://${{ secrets.S3_INTEGRATION_BUCKET }}/${{ inputs.PackageBucketKey }}/linux/amd64/amazon-cloudwatch-agent.rpm .
#      - name: GetRPMSize
#        run: ls -lh
#      - name: Measure Installation Time
#        run : time -v rpm -i -y amazon-cloudwatch-agent.rpm
